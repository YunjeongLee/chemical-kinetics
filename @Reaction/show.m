% Show reactions
function show(reaction, rate_format)
    if nargin == 1
        rate_format = '%.4e';
    end
    max_name_length = max(cellfun(@length, reaction.chemicals));
    name_format = ['% ' num2str(max_name_length) 's'];
    for i = 1 : length(reaction.InjectionRate)
        fprintf(['(rate = ' rate_format ') ' name_format '\n'], ...
            reaction.InjectionRate(i), ...
            reaction.chemicals{reaction.InjectionIndex});
    end
    for n = 1 : size(reaction.Rate, 1)
        for m = 1 : size(reaction.Rate, 2)
            if isempty(reaction.Rate{n,m})
                continue;
            end
            format = strjoin({ ...
                '(rate = ' rate_format ') ', ...
                strjoin(repmat({name_format}, 1, n), ' + ') ' -> ', ...
                strjoin(repmat({name_format}, 1, m), ' + '), ...
                '\n'});
            for i = 1 : length(reaction.Rate{n,m})
                fprintf(format, ...
                    reaction.Rate{n,m}(i), ...
                    reaction.chemicals{reaction.SrcIndex{n,m}(i, :)}, ...
                    reaction.chemicals{reaction.TrgIndex{n,m}(i, :)});
            end
        end
    end
    for n = 1 : size(reaction.RateWithCatalyst, 1)
        for m = 1 : size(reaction.RateWithCatalyst, 2)
            if isempty(reaction.RateWithCatalyst{n, m})
                continue;
            end
            format = strjoin({ ...
                '(rate = ' rate_format ') ', ...
                strjoin(repmat({name_format}, 1, n), ' + '), ...
                ' -> ', ...
                strjoin(repmat({name_format}, 1, m), ' + '), ...
                ' /\t'});
            for i = 1 : length(reaction.RateWithCatalyst{n,m})
                fprintf(format, ...
                    reaction.RateWithCatalyst{n,m}(i), ...
                    reaction.chemicals{reaction.SrcIndexWithCatalyst{n,m}(i, :)}, ...
                    reaction.chemicals{reaction.TrgIndexWithCatalyst{n,m}(i, :)});
                fprintf(['Catalysts: ', ...
                strjoin(repmat({name_format}, 1, nnz(~reaction.IsNOTCatalyst{n,m}(i,:))), ', '), ...
                '\n'], reaction.chemicals{reaction.SrcIndexWithCatalyst{n,m}(i, ~reaction.IsNOTCatalyst{n,m}(i,:))});
            end
        end
    end
end